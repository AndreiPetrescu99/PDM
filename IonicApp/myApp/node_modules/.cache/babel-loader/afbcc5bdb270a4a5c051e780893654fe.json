{"ast":null,"code":"import { getLogger } from \"../core\";\nimport axios from 'axios';\nconst log = getLogger('trainsAPI');\nconst baseURL = 'http://localhost:3000';\nconst trainURL = `${baseURL}/train`;\n\nfunction witLogs(promise, fnName) {\n  log(`${fnName} - started`);\n  return promise.then(res => {\n    log(`${fnName} - succeded`);\n    return Promise.resolve(res.data);\n  }).catch(err => {\n    log(`${fnName} - failed`);\n    return Promise.reject(err);\n  });\n}\n\nconst config = {\n  headers: {\n    'Content-Type': 'application/json'\n  }\n};\nexport const getTrains = () => {\n  return witLogs(axios.get(trainURL, config), 'getItems');\n};\nexport const updateTrain = train => {\n  return witLogs(axios.put(`${trainURL}/${train.id}`, train, config), 'updateTrain');\n};","map":{"version":3,"sources":["D:/PDM/IonicApp/myApp/src/todo/TrainsAPI.tsx"],"names":["getLogger","axios","log","baseURL","trainURL","witLogs","promise","fnName","then","res","Promise","resolve","data","catch","err","reject","config","headers","getTrains","get","updateTrain","train","put","id"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,SAAxB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,GAAG,GAAGF,SAAS,CAAC,WAAD,CAArB;AAEA,MAAMG,OAAO,GAAG,uBAAhB;AACA,MAAMC,QAAQ,GAAI,GAAED,OAAQ,QAA5B;;AAMA,SAASE,OAAT,CAAoBC,OAApB,EAAwDC,MAAxD,EAAkF;AAC9EL,EAAAA,GAAG,CAAE,GAAEK,MAAO,YAAX,CAAH;AACA,SAAOD,OAAO,CACTE,IADE,CACGC,GAAG,IAAI;AACTP,IAAAA,GAAG,CAAE,GAAEK,MAAO,aAAX,CAAH;AACA,WAAOG,OAAO,CAACC,OAAR,CAAgBF,GAAG,CAACG,IAApB,CAAP;AACH,GAJE,EAKFC,KALE,CAKIC,GAAG,IAAI;AACVZ,IAAAA,GAAG,CAAE,GAAEK,MAAO,WAAX,CAAH;AACA,WAAOG,OAAO,CAACK,MAAR,CAAeD,GAAf,CAAP;AACH,GARE,CAAP;AASH;;AAED,MAAME,MAAM,GAAG;AACXC,EAAAA,OAAO,EAAC;AACJ,oBAAgB;AADZ;AADG,CAAf;AAMA,OAAO,MAAMC,SAAsC,GAAG,MAAK;AACvD,SAAOb,OAAO,CAACJ,KAAK,CAACkB,GAAN,CAAUf,QAAV,EAAoBY,MAApB,CAAD,EAA8B,UAA9B,CAAd;AACH,CAFM;AAIP,OAAO,MAAMI,WAAyD,GAAGC,KAAK,IAAI;AAC9E,SAAOhB,OAAO,CAACJ,KAAK,CAACqB,GAAN,CAAW,GAAElB,QAAS,IAAGiB,KAAK,CAACE,EAAG,EAAlC,EAAqCF,KAArC,EAA4CL,MAA5C,CAAD,EAAsD,aAAtD,CAAd;AACH,CAFM","sourcesContent":["import {getLogger} from \"../core\";\r\nimport {TrainProps} from \"./TrainProps\";\r\nimport axios from 'axios';\r\n\r\nconst log = getLogger('trainsAPI');\r\n\r\nconst baseURL = 'http://localhost:3000';\r\nconst trainURL = `${baseURL}/train`;\r\n\r\ninterface ResponseProps<T>{\r\n    data: T;\r\n}\r\n\r\nfunction witLogs<T>(promise: Promise<ResponseProps<T>>, fnName:string): Promise<T>{\r\n    log(`${fnName} - started`);\r\n    return promise\r\n        .then(res => {\r\n            log(`${fnName} - succeded`);\r\n            return Promise.resolve(res.data);\r\n        })\r\n        .catch(err => {\r\n            log(`${fnName} - failed`);\r\n            return Promise.reject(err);\r\n        });\r\n}\r\n\r\nconst config = {\r\n    headers:{\r\n        'Content-Type': 'application/json'\r\n    }\r\n};\r\n\r\nexport const getTrains: () => Promise<TrainProps[]> = () =>{\r\n    return witLogs(axios.get(trainURL, config), 'getItems');\r\n};\r\n\r\nexport const updateTrain: (train: TrainProps) => Promise<TrainProps[]> = train => {\r\n    return witLogs(axios.put(`${trainURL}/${train.id}`, train, config), 'updateTrain');\r\n}"]},"metadata":{},"sourceType":"module"}