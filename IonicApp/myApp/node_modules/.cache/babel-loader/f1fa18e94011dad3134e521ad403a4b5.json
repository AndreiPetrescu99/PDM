{"ast":null,"code":"import { useCamera } from '@ionic/react-hooks/camera';\nimport { CameraResultType, CameraSource } from '@capacitor/core';\nimport { useState } from 'react';\nexport function usePhotoGallery() {\n  const {\n    getPhoto\n  } = useCamera();\n  const [photos, setPhotos] = useState([]);\n\n  const takePhoto = async () => {\n    const cameraPhoto = await getPhoto({\n      resultType: CameraResultType.Uri,\n      source: CameraSource.Camera,\n      quality: 100\n    });\n    const fileName = new Date().getTime() + '.jpeg';\n    const newPhotos = [{\n      filepath: fileName,\n      webviewPath: cameraPhoto.webPath\n    }, ...photos];\n    setPhotos(newPhotos);\n  };\n\n  return {\n    photos,\n    takePhoto\n  };\n}","map":{"version":3,"sources":["D:/PDM/IonicApp/myApp/src/todo/usePhotoGallery.tsx"],"names":["useCamera","CameraResultType","CameraSource","useState","usePhotoGallery","getPhoto","photos","setPhotos","takePhoto","cameraPhoto","resultType","Uri","source","Camera","quality","fileName","Date","getTime","newPhotos","filepath","webviewPath","webPath"],"mappings":"AAAA,SAASA,SAAT,QAA0B,2BAA1B;AACA,SAASC,gBAAT,EAA2BC,YAA3B,QAA+C,iBAA/C;AACA,SAASC,QAAT,QAAyB,OAAzB;AAOA,OAAO,SAASC,eAAT,GAA2B;AAChC,QAAM;AAAEC,IAAAA;AAAF,MAAeL,SAAS,EAA9B;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAU,EAAV,CAApC;;AAEA,QAAMK,SAAS,GAAG,YAAY;AAC5B,UAAMC,WAAW,GAAG,MAAMJ,QAAQ,CAAC;AACjCK,MAAAA,UAAU,EAAET,gBAAgB,CAACU,GADI;AAEjCC,MAAAA,MAAM,EAAEV,YAAY,CAACW,MAFY;AAGjCC,MAAAA,OAAO,EAAE;AAHwB,KAAD,CAAlC;AAKA,UAAMC,QAAQ,GAAG,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,OAAxC;AACA,UAAMC,SAAS,GAAG,CAAC;AACjBC,MAAAA,QAAQ,EAAEJ,QADO;AAEjBK,MAAAA,WAAW,EAAEX,WAAW,CAACY;AAFR,KAAD,EAGf,GAAGf,MAHY,CAAlB;AAIAC,IAAAA,SAAS,CAACW,SAAD,CAAT;AACD,GAZD;;AAcA,SAAO;AACLZ,IAAAA,MADK;AAELE,IAAAA;AAFK,GAAP;AAID","sourcesContent":["import { useCamera } from '@ionic/react-hooks/camera';\r\nimport { CameraResultType, CameraSource } from '@capacitor/core';\r\nimport { useState } from 'react';\r\n\r\nexport interface Photo {\r\n  filepath: string;\r\n  webviewPath?: string;\r\n}\r\n\r\nexport function usePhotoGallery() {\r\n  const { getPhoto } = useCamera();\r\n  const [photos, setPhotos] = useState<Photo[]>([]);\r\n\r\n  const takePhoto = async () => {\r\n    const cameraPhoto = await getPhoto({\r\n      resultType: CameraResultType.Uri,\r\n      source: CameraSource.Camera,\r\n      quality: 100\r\n    });\r\n    const fileName = new Date().getTime() + '.jpeg';\r\n    const newPhotos = [{\r\n      filepath: fileName,\r\n      webviewPath: cameraPhoto.webPath\r\n    }, ...photos];\r\n    setPhotos(newPhotos)\r\n  };\r\n\r\n  return {\r\n    photos,\r\n    takePhoto\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}