{"ast":null,"code":"import { useCamera } from '@ionic/react-hooks/camera';\nimport { CameraResultType, CameraSource, FilesystemDirectory } from '@capacitor/core';\nimport { useState } from 'react';\nimport { base64FromPath, useFilesystem } from '@ionic/react-hooks/filesystem';\nexport function usePhotoGallery() {\n  const {\n    getPhoto\n  } = useCamera();\n  const [photos, setPhotos] = useState([]);\n\n  const takePhoto = async () => {\n    const cameraPhoto = await getPhoto({\n      resultType: CameraResultType.Uri,\n      source: CameraSource.Camera,\n      quality: 100\n    });\n    const fileName = new Date().getTime() + '.jpeg';\n    const savedFileImage = await savePicture(cameraPhoto, fileName);\n    const newPhotos = [savedFileImage, ...photos];\n    setPhotos(newPhotos);\n  };\n\n  const {\n    writeFile\n  } = useFilesystem();\n\n  const savePicture = async (photo, fileName) => {\n    const base64Data = await base64FromPath(photo.webPath);\n    const savedFile = await writeFile({\n      path: fileName,\n      data: base64Data,\n      directory: FilesystemDirectory.Data\n    });\n    return {\n      filepath: fileName,\n      webviewPath: photo.webPath\n    };\n  };\n\n  return {\n    photos,\n    takePhoto\n  };\n}","map":{"version":3,"sources":["D:/PDM/IonicApp/myApp/src/todo/usePhotoGallery.tsx"],"names":["useCamera","CameraResultType","CameraSource","FilesystemDirectory","useState","base64FromPath","useFilesystem","usePhotoGallery","getPhoto","photos","setPhotos","takePhoto","cameraPhoto","resultType","Uri","source","Camera","quality","fileName","Date","getTime","savedFileImage","savePicture","newPhotos","writeFile","photo","base64Data","webPath","savedFile","path","data","directory","Data","filepath","webviewPath"],"mappings":"AAAA,SAASA,SAAT,QAA0B,2BAA1B;AACA,SAAsBC,gBAAtB,EAAwCC,YAAxC,EAAsDC,mBAAtD,QAAiF,iBAAjF;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,+BAA9C;AAOA,OAAO,SAASC,eAAT,GAA2B;AAChC,QAAM;AAAEC,IAAAA;AAAF,MAAeR,SAAS,EAA9B;AACA,QAAM,CAACS,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAU,EAAV,CAApC;;AAEA,QAAMO,SAAS,GAAG,YAAY;AAC5B,UAAMC,WAAW,GAAG,MAAMJ,QAAQ,CAAC;AACjCK,MAAAA,UAAU,EAAEZ,gBAAgB,CAACa,GADI;AAEjCC,MAAAA,MAAM,EAAEb,YAAY,CAACc,MAFY;AAGjCC,MAAAA,OAAO,EAAE;AAHwB,KAAD,CAAlC;AAKA,UAAMC,QAAQ,GAAG,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,OAAxC;AACA,UAAMC,cAAc,GAAG,MAAMC,WAAW,CAACV,WAAD,EAAcM,QAAd,CAAxC;AACA,UAAMK,SAAS,GAAG,CAACF,cAAD,EAAiB,GAAGZ,MAApB,CAAlB;AACAC,IAAAA,SAAS,CAACa,SAAD,CAAT;AACD,GAVD;;AAYA,QAAM;AAAEC,IAAAA;AAAF,MAAgBlB,aAAa,EAAnC;;AACA,QAAMgB,WAAW,GAAG,OAAOG,KAAP,EAA2BP,QAA3B,KAAgE;AAClF,UAAMQ,UAAU,GAAG,MAAMrB,cAAc,CAACoB,KAAK,CAACE,OAAP,CAAvC;AACA,UAAMC,SAAS,GAAG,MAAMJ,SAAS,CAAC;AAChCK,MAAAA,IAAI,EAAEX,QAD0B;AAEhCY,MAAAA,IAAI,EAAEJ,UAF0B;AAGhCK,MAAAA,SAAS,EAAE5B,mBAAmB,CAAC6B;AAHC,KAAD,CAAjC;AAMA,WAAO;AACLC,MAAAA,QAAQ,EAAEf,QADL;AAELgB,MAAAA,WAAW,EAAET,KAAK,CAACE;AAFd,KAAP;AAID,GAZD;;AAcA,SAAO;AACLlB,IAAAA,MADK;AAELE,IAAAA;AAFK,GAAP;AAID","sourcesContent":["import { useCamera } from '@ionic/react-hooks/camera';\r\nimport { CameraPhoto, CameraResultType, CameraSource, FilesystemDirectory } from '@capacitor/core';\r\nimport { useState } from 'react';\r\nimport { base64FromPath, useFilesystem } from '@ionic/react-hooks/filesystem';\r\n\r\nexport interface Photo {\r\n  filepath: string;\r\n  webviewPath?: string;\r\n}\r\n\r\nexport function usePhotoGallery() {\r\n  const { getPhoto } = useCamera();\r\n  const [photos, setPhotos] = useState<Photo[]>([]);\r\n\r\n  const takePhoto = async () => {\r\n    const cameraPhoto = await getPhoto({\r\n      resultType: CameraResultType.Uri,\r\n      source: CameraSource.Camera,\r\n      quality: 100\r\n    });\r\n    const fileName = new Date().getTime() + '.jpeg';\r\n    const savedFileImage = await savePicture(cameraPhoto, fileName);\r\n    const newPhotos = [savedFileImage, ...photos];\r\n    setPhotos(newPhotos);\r\n  };\r\n\r\n  const { writeFile } = useFilesystem();\r\n  const savePicture = async (photo: CameraPhoto, fileName: string): Promise<Photo> => {\r\n    const base64Data = await base64FromPath(photo.webPath!);\r\n    const savedFile = await writeFile({\r\n      path: fileName,\r\n      data: base64Data,\r\n      directory: FilesystemDirectory.Data\r\n    });\r\n\r\n    return {\r\n      filepath: fileName,\r\n      webviewPath: photo.webPath\r\n    };\r\n  };\r\n\r\n  return {\r\n    photos,\r\n    takePhoto\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}