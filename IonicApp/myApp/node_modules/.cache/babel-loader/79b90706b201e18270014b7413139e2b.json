{"ast":null,"code":"var _jsxFileName = \"D:\\\\PDM\\\\IonicApp\\\\myApp\\\\src\\\\todo\\\\Home.tsx\";\nimport { IonContent, IonHeader, IonInfiniteScroll, IonInfiniteScrollContent, IonList, IonLoading, IonPage, IonTitle, IonToolbar, useIonViewWillEnter } from \"@ionic/react\";\nimport React, { useContext, useState } from \"react\";\nimport Train from \"./Train\";\nimport { baseUrl, getLogger } from '../core';\nimport { TrainContext } from \"./TrainProvider\";\nimport { getTrainsPage } from \"./TrainsAPI\";\nimport { AuthContext } from \"../auth\";\nconst log = getLogger('Home');\n\nconst Home = ({\n  history\n}) => {\n  let {\n    trains,\n    fetching,\n    fetchingError\n  } = useContext(TrainContext);\n  const {\n    token\n  } = useContext(AuthContext);\n  const [items, setItems] = useState([]);\n  const [page, setPage] = useState(1);\n  const [disableInfiniteScroll, setDisableInfiniteScroll] = useState(false);\n\n  async function fetchItems(page) {\n    const trainURL = `http://${baseUrl}/api/train`;\n    let crPage = page;\n    const trainURLPage = `${trainURL}/page/${crPage}`;\n    const url = trainURLPage;\n    const res = getTrainsPage(token, crPage);\n    res.then(async res => {\n      if (page === 3) {\n        setPage(prevState => 2);\n      }\n\n      if (res && res.length > 0) {\n        setItems([...items, ...res]);\n        setPage(prevState => prevState + 1);\n        setDisableInfiniteScroll(res.length < 15);\n      } else {\n        setDisableInfiniteScroll(true);\n      }\n    }).catch(err => console.error(err));\n  }\n\n  useIonViewWillEnter(async () => {\n    await fetchItems(page);\n  });\n\n  async function searchNext($event) {\n    //const {trains, fetching, fetchingError} = useContext(TrainContext);\n    log(\"searching Next\");\n    log(page);\n    await fetchItems(page);\n    $event.target.complete();\n  }\n\n  log(\"Trains render...\");\n  return /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, \"Student CFR\"))), /*#__PURE__*/React.createElement(IonContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonLoading, {\n    isOpen: fetching,\n    message: \"Fetching trains\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }), items && /*#__PURE__*/React.createElement(IonList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 21\n    }\n  }, items.map(({\n    _id,\n    from,\n    to,\n    nrSeats\n  }) => /*#__PURE__*/React.createElement(Train, {\n    key: _id,\n    _id: _id,\n    from: from,\n    to: to,\n    nrSeats: nrSeats,\n    onBuy: id => history.push(`/train/${id}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 29\n    }\n  }))), fetchingError && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, fetchingError.message || 'Failed to fetch items'), /*#__PURE__*/React.createElement(IonInfiniteScroll, {\n    threshold: \"100px\",\n    disabled: disableInfiniteScroll,\n    onIonInfinite: e => searchNext(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonInfiniteScrollContent, {\n    loadingText: \"Loading...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default Home;","map":{"version":3,"sources":["D:/PDM/IonicApp/myApp/src/todo/Home.tsx"],"names":["IonContent","IonHeader","IonInfiniteScroll","IonInfiniteScrollContent","IonList","IonLoading","IonPage","IonTitle","IonToolbar","useIonViewWillEnter","React","useContext","useState","Train","baseUrl","getLogger","TrainContext","getTrainsPage","AuthContext","log","Home","history","trains","fetching","fetchingError","token","items","setItems","page","setPage","disableInfiniteScroll","setDisableInfiniteScroll","fetchItems","trainURL","crPage","trainURLPage","url","res","then","prevState","length","catch","err","console","error","searchNext","$event","target","complete","map","_id","from","to","nrSeats","id","push","message","e"],"mappings":"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","sourcesContent":["import {\r\n    IonContent,\r\n    IonFab,\r\n    IonFabButton,\r\n    IonHeader,\r\n    IonIcon, IonInfiniteScroll, IonInfiniteScrollContent, IonList,\r\n    IonLoading,\r\n    IonPage,\r\n    IonTitle,\r\n    IonToolbar, useIonViewWillEnter\r\n} from \"@ionic/react\";\r\nimport React, {useContext, useState} from \"react\";\r\nimport Train from \"./Train\";\r\nimport {baseUrl, getLogger} from '../core';\r\nimport {add, train} from \"ionicons/icons\";\r\nimport {TrainContext, TrainProvider} from \"./TrainProvider\";\r\nimport {RouteComponentProps} from \"react-router\";\r\nimport {getTrains, getTrainsPage} from \"./TrainsAPI\";\r\nimport {AuthContext} from \"../auth\";\r\nimport {TrainProps} from \"./TrainProps\";\r\nconst log = getLogger('Home');\r\n\r\nconst Home: React.FC<RouteComponentProps> = ({history}) =>{\r\n    let {trains, fetching, fetchingError} = useContext(TrainContext);\r\n    const {token} = useContext(AuthContext);\r\n\r\n    const [items, setItems] = useState<TrainProps[]>([]);\r\n    const [page, setPage] = useState<number>(1);\r\n    const [disableInfiniteScroll, setDisableInfiniteScroll] = useState<boolean>(false);\r\n\r\n\r\n    async function fetchItems(page: number) {\r\n        const trainURL = `http://${baseUrl}/api/train`;\r\n        let crPage = page;\r\n        const trainURLPage =`${trainURL}/page/${crPage}`;\r\n        const url: string = trainURLPage;\r\n        const res = getTrainsPage(token, crPage);\r\n        res\r\n            .then(async (res) => {\r\n                if(page === 3){\r\n                    setPage(prevState => 2);\r\n                }\r\n                if (res && res.length > 0) {\r\n                    setItems([...items, ...res]);\r\n                    setPage(prevState => prevState + 1);\r\n                    setDisableInfiniteScroll(res.length < 15);\r\n                } else {\r\n                    setDisableInfiniteScroll(true);\r\n                }\r\n            })\r\n            .catch(err => console.error(err));\r\n    }\r\n\r\n    useIonViewWillEnter(async () => {\r\n        await fetchItems(page);\r\n    });\r\n\r\n    async function searchNext($event: CustomEvent<void>) {\r\n        //const {trains, fetching, fetchingError} = useContext(TrainContext);\r\n        log(\"searching Next\");\r\n        log(page);\r\n        await fetchItems(page);\r\n        ($event.target as HTMLIonInfiniteScrollElement).complete();\r\n    }\r\n\r\n    log(\"Trains render...\");\r\n    return(\r\n        <IonPage>\r\n            <IonHeader>\r\n                <IonToolbar>\r\n                    <IonTitle>Student CFR</IonTitle>\r\n                </IonToolbar>\r\n            </IonHeader>\r\n            <IonContent>\r\n                <IonLoading isOpen = {fetching} message = \"Fetching trains\"/>\r\n                {items && (\r\n                    <IonList>\r\n                        {items.map(({_id, from, to, nrSeats}) =>\r\n                            <Train key={_id} _id={_id} from={from} to={to} nrSeats={nrSeats} onBuy={id => history.push(`/train/${id}`)}/>)}\r\n                    </IonList>\r\n                )}\r\n                {fetchingError && (\r\n                    <div>{fetchingError.message || 'Failed to fetch items'}</div>\r\n                )}\r\n                <IonInfiniteScroll threshold=\"100px\" disabled={disableInfiniteScroll}\r\n                                   onIonInfinite={(e: CustomEvent<void>) => searchNext(e)}>\r\n                    <IonInfiniteScrollContent\r\n                        loadingText=\"Loading...\">\r\n                    </IonInfiniteScrollContent>\r\n                </IonInfiniteScroll>\r\n            </IonContent>\r\n        </IonPage>\r\n    );\r\n};\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}