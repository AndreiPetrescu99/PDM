{"ast":null,"code":"var _jsxFileName = \"D:\\\\PDM\\\\IonicApp\\\\myApp\\\\src\\\\todo\\\\Home.tsx\";\nimport { IonContent, IonHeader, IonInfiniteScroll, IonInfiniteScrollContent, IonList, IonLoading, IonPage, IonTitle, IonToolbar, useIonViewDidEnter } from \"@ionic/react\";\nimport React, { useContext, useEffect, useState } from \"react\";\nimport Train from \"./Train\";\nimport { baseUrl, getLogger } from '../core';\nimport { TrainContext } from \"./TrainProvider\";\nimport { getTrainsPage } from \"./TrainsAPI\";\nimport { AuthContext } from \"../auth\";\nimport { Plugins } from \"@capacitor/core\";\nconst log = getLogger('Home');\n\nconst Home = ({\n  history\n}) => {\n  const {\n    trains,\n    fetching,\n    fetchingError\n  } = useContext(TrainContext);\n  const {\n    token\n  } = useContext(AuthContext);\n  log(trains);\n  const offset = 15;\n  const {\n    Storage\n  } = Plugins;\n  Storage.set({\n    key: 'user',\n    value: JSON.stringify({\n      token: token\n    })\n  });\n  const [items, setItems] = useState([]);\n  const [page, setPage] = useState(1);\n  const [trainSlice, setTrainSlice] = useState([]);\n  useEffect(() => {\n    // @ts-ignore\n    // @ts-ignore\n    setTrainSlice(trains === null || trains === void 0 ? void 0 : trains.slice(0, 15));\n  }, []);\n  const [disableInfiniteScroll, setDisableInfiniteScroll] = useState(false);\n  const [second, setSecond] = useState(false);\n  const [localItems, setLocalItems] = useState();\n\n  async function setInit() {\n    setPage(prevState => 0);\n  }\n\n  async function sliceTrains() {\n    // @ts-ignore\n    setTrainSlice(trains === null || trains === void 0 ? void 0 : trains.slice(0, 15)); //log(trains);\n  }\n\n  async function fetchItems(page) {\n    const trainURL = `http://${baseUrl}/api/train`;\n    let crPage = page;\n    const trainURLPage = `${trainURL}/page/${crPage}`;\n    const url = trainURLPage;\n    const res = getTrainsPage(token, crPage);\n    res.then(async res => {\n      if (res && res.length > 0) {\n        setItems([...items, ...res]);\n        setPage(prevState => prevState + 1);\n        setDisableInfiniteScroll(res.length < 15);\n      } else {\n        setDisableInfiniteScroll(true);\n      }\n    }).catch(err => {\n      log(err);\n      const localItems = getLocalData();\n      localItems.then(async res => {\n        setItems([...items, ...res]);\n        setDisableInfiniteScroll(true);\n      });\n    });\n  }\n\n  useIonViewDidEnter(async () => {\n    // await setInit();\n    // await fetchItems(page);\n    // @ts-ignore\n    await sliceTrains();\n  });\n\n  async function searchNext($event) {\n    //const {trains, fetching, fetchingError} = useContext(TrainContext);\n    log(\"searching Next\");\n    log(page); // await fetchItems(page);\n\n    $event.target.complete();\n  }\n\n  log(\"Trains render...\");\n  return /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, \"Student CFR\"))), /*#__PURE__*/React.createElement(IonContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonLoading, {\n    isOpen: fetching,\n    message: \"Fetching trains\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }), trainSlice && /*#__PURE__*/React.createElement(IonList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, trainSlice.map(({\n    _id,\n    from,\n    to,\n    nrSeats\n  }) => /*#__PURE__*/React.createElement(Train, {\n    key: _id,\n    _id: _id,\n    from: from,\n    to: to,\n    nrSeats: nrSeats,\n    onBuy: id => history.push(`/train/${id}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 29\n    }\n  }))), fetchingError && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, fetchingError.message || 'Failed to fetch items'), /*#__PURE__*/React.createElement(IonInfiniteScroll, {\n    threshold: \"100px\",\n    disabled: disableInfiniteScroll,\n    onIonInfinite: e => searchNext(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonInfiniteScrollContent, {\n    loadingText: \"Loading...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 21\n    }\n  }))));\n\n  async function getLocalData() {\n    let items = [];\n    const {\n      Storage\n    } = Plugins;\n    const {\n      keys\n    } = await Storage.keys();\n\n    for (let i = 0; i < keys.length; i++) {\n      const res = await Storage.get({\n        key: keys[i]\n      });\n\n      if (res.value) {\n        items.push(buildTrainProps(JSON.parse(res.value)));\n      }\n    }\n\n    return items;\n  }\n\n  function buildTrainProps(train) {\n    return train;\n  }\n\n  function trainStorage(token) {\n    (async () => {\n      const {\n        Storage\n      } = Plugins; // Saving ({ key: string, value: string }) => Promise<void>\n\n      await Storage.set({\n        key: 'user',\n        value: JSON.stringify({\n          token: token\n        })\n      }); // Loading value by key ({ key: string }) => Promise<{ value: string | null }>\n\n      const res = await Storage.get({\n        key: 'user'\n      });\n\n      if (res.value) {\n        console.log('User found', JSON.parse(res.value));\n      } else {\n        console.log('User not found');\n      } // Loading keys () => Promise<{ keys: string[] }>\n\n\n      const {\n        keys\n      } = await Storage.keys();\n      console.log('Keys found', keys); // Removing value by key, ({ key: string }) => Promise<void>\n\n      await Storage.remove({\n        key: 'user'\n      });\n      console.log('Keys found after remove', await Storage.keys()); // Clear storage () => Promise<void>\n      // await Storage.clear();\n    })();\n  }\n};\n\nexport default Home;","map":{"version":3,"sources":["D:/PDM/IonicApp/myApp/src/todo/Home.tsx"],"names":["IonContent","IonHeader","IonInfiniteScroll","IonInfiniteScrollContent","IonList","IonLoading","IonPage","IonTitle","IonToolbar","useIonViewDidEnter","React","useContext","useEffect","useState","Train","baseUrl","getLogger","TrainContext","getTrainsPage","AuthContext","Plugins","log","Home","history","trains","fetching","fetchingError","token","offset","Storage","set","key","value","JSON","stringify","items","setItems","page","setPage","trainSlice","setTrainSlice","slice","disableInfiniteScroll","setDisableInfiniteScroll","second","setSecond","localItems","setLocalItems","setInit","prevState","sliceTrains","fetchItems","trainURL","crPage","trainURLPage","url","res","then","length","catch","err","getLocalData","searchNext","$event","target","complete","map","_id","from","to","nrSeats","id","push","message","e","keys","i","get","buildTrainProps","parse","train","trainStorage","console","remove"],"mappings":"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","sourcesContent":["import {\r\n    IonContent,\r\n    IonFab,\r\n    IonFabButton,\r\n    IonHeader,\r\n    IonIcon, IonInfiniteScroll, IonInfiniteScrollContent, IonList,\r\n    IonLoading,\r\n    IonPage,\r\n    IonTitle,\r\n    IonToolbar, useIonViewDidEnter, useIonViewWillEnter\r\n} from \"@ionic/react\";\r\nimport React, {useContext, useEffect, useState} from \"react\";\r\nimport Train from \"./Train\";\r\nimport {baseUrl, getLogger} from '../core';\r\nimport {add, train} from \"ionicons/icons\";\r\nimport {TrainContext, TrainProvider} from \"./TrainProvider\";\r\nimport {RouteComponentProps} from \"react-router\";\r\nimport {getTrains, getTrainsPage} from \"./TrainsAPI\";\r\nimport {AuthContext} from \"../auth\";\r\nimport {TrainProps} from \"./TrainProps\";\r\nimport {Plugins} from \"@capacitor/core\";\r\nconst log = getLogger('Home');\r\n\r\nconst Home: React.FC<RouteComponentProps> = ({history}) =>{\r\n    const {trains, fetching, fetchingError, } = useContext(TrainContext);\r\n    const {token} = useContext(AuthContext);\r\n    log(trains);\r\n\r\n    const offset = 15\r\n    const {Storage} = Plugins\r\n    Storage.set({\r\n        key: 'user',\r\n        value: JSON.stringify({\r\n            token: token\r\n        })\r\n    });\r\n\r\n    const [items, setItems] = useState<TrainProps[]>([]);\r\n    const [page, setPage] = useState<number>(1);\r\n    const [trainSlice, setTrainSlice] = useState<TrainProps[]>([]);\r\n\r\n    useEffect(() => {// @ts-ignore\r\n        // @ts-ignore\r\n        setTrainSlice(trains?.slice(0,15));}, [])\r\n\r\n\r\n    const [disableInfiniteScroll, setDisableInfiniteScroll] = useState<boolean>(false);\r\n    const [second, setSecond] = useState<boolean>(false);\r\n    const [localItems, setLocalItems] = useState<string[]>();\r\n\r\n    async function setInit(){\r\n        setPage(prevState => 0);\r\n    }\r\n\r\n    async function sliceTrains(){\r\n        // @ts-ignore\r\n        setTrainSlice(trains?.slice(0, 15));\r\n        //log(trains);\r\n    }\r\n\r\n    async function fetchItems(page: number) {\r\n        const trainURL = `http://${baseUrl}/api/train`;\r\n        let crPage = page;\r\n        const trainURLPage =`${trainURL}/page/${crPage}`;\r\n        const url: string = trainURLPage;\r\n        const res = getTrainsPage(token, crPage);\r\n        res\r\n            .then(async (res) => {\r\n                if (res && res.length > 0) {\r\n                    setItems([...items, ...res]);\r\n                    setPage(prevState => prevState + 1);\r\n                    setDisableInfiniteScroll(res.length < 15);\r\n                } else {\r\n                    setDisableInfiniteScroll(true);\r\n                }\r\n            })\r\n            .catch(err => {\r\n                log(err);\r\n                const localItems = getLocalData();\r\n                localItems\r\n                    .then(async (res) =>{\r\n                        setItems([...items, ...res]);\r\n                        setDisableInfiniteScroll(true);\r\n                    })\r\n            });\r\n    }\r\n\r\n    useIonViewDidEnter(async () => {\r\n        // await setInit();\r\n        // await fetchItems(page);\r\n        // @ts-ignore\r\n        await sliceTrains();\r\n    });\r\n\r\n    async function searchNext($event: CustomEvent<void>) {\r\n        //const {trains, fetching, fetchingError} = useContext(TrainContext);\r\n        log(\"searching Next\");\r\n        log(page);\r\n        // await fetchItems(page);\r\n        ($event.target as HTMLIonInfiniteScrollElement).complete();\r\n    }\r\n\r\n    log(\"Trains render...\");\r\n    return(\r\n        <IonPage>\r\n            <IonHeader>\r\n                <IonToolbar>\r\n                    <IonTitle>Student CFR</IonTitle>\r\n                </IonToolbar>\r\n            </IonHeader>\r\n            <IonContent>\r\n                <IonLoading isOpen = {fetching} message = \"Fetching trains\"/>\r\n                {trainSlice && (\r\n                    <IonList>\r\n                        {trainSlice.map(({_id, from, to, nrSeats}) =>\r\n                            <Train key={_id} _id={_id} from={from} to={to} nrSeats={nrSeats} onBuy={id => history.push(`/train/${id}`)}/>)}\r\n                    </IonList>\r\n                )}\r\n                {fetchingError && (\r\n                    <div>{fetchingError.message || 'Failed to fetch items'}</div>\r\n                )}\r\n                <IonInfiniteScroll threshold=\"100px\" disabled={disableInfiniteScroll}\r\n                                   onIonInfinite={(e: CustomEvent<void>) => searchNext(e)}>\r\n                    <IonInfiniteScrollContent\r\n                        loadingText=\"Loading...\">\r\n                    </IonInfiniteScrollContent>\r\n                </IonInfiniteScroll>\r\n            </IonContent>\r\n        </IonPage>\r\n    );\r\n\r\n\r\n    async function getLocalData() {\r\n        let items = []\r\n        const {Storage} = Plugins;\r\n        const {keys} = await Storage.keys();\r\n        for(let i = 0; i<keys.length; i++){\r\n            const res = await Storage.get({ key: keys[i] });\r\n            if(res.value) {\r\n                items.push(buildTrainProps(JSON.parse(res.value)));\r\n            }\r\n        }\r\n\r\n        return items;\r\n    }\r\n\r\n    function buildTrainProps(train: TrainProps){\r\n        return train;\r\n    }\r\n\r\n\r\n    function trainStorage(token: string) {\r\n        (async () => {\r\n            const { Storage } = Plugins;\r\n\r\n            // Saving ({ key: string, value: string }) => Promise<void>\r\n            await Storage.set({\r\n                key: 'user',\r\n                value: JSON.stringify({\r\n                    token: token\r\n                })\r\n            });\r\n\r\n            // Loading value by key ({ key: string }) => Promise<{ value: string | null }>\r\n            const res = await Storage.get({ key: 'user' });\r\n            if (res.value) {\r\n                console.log('User found', JSON.parse(res.value));\r\n            } else {\r\n                console.log('User not found');\r\n            }\r\n\r\n            // Loading keys () => Promise<{ keys: string[] }>\r\n            const { keys } = await Storage.keys();\r\n            console.log('Keys found', keys);\r\n\r\n            // Removing value by key, ({ key: string }) => Promise<void>\r\n            await Storage.remove({ key: 'user' });\r\n            console.log('Keys found after remove', await Storage.keys());\r\n\r\n            // Clear storage () => Promise<void>\r\n           // await Storage.clear();\r\n        })();\r\n    }\r\n};\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}