{"ast":null,"code":"import { getLogger } from \"../core\";\nimport { useState } from \"react\";\nconst log = getLogger('useTrains');\nexport const useTrains = () => {\n  const [trains, setItems] = useState([{\n    id: \"1\",\n    from: \"Bucuresti\",\n    to: \"Iasi\",\n    nrSeats: 4\n  }, {\n    id: \"2\",\n    from: \"Cluj-Napoca\",\n    to: \"Timisoara\",\n    nrSeats: 5\n  }]);\n\n  const changeSeats = () => {\n    const id = \"2\";\n    log(\"Seat changed\");\n    let upTrain = trains.find(tr => tr.id === id);\n\n    if (upTrain) {\n      upTrain.nrSeats++; //let trainsAux = trains;\n\n      for (let i = 0; i < trains.length; i++) {\n        if (trains[i].id === upTrain.id) trains[i].nrSeats = upTrain.nrSeats;\n      }\n\n      setItems(trains.concat());\n      log(\"Nr trains:\" + trains.length);\n    }\n  };\n\n  log(\"Returns...\");\n  return {\n    trains,\n    changeSeats\n  };\n};","map":{"version":3,"sources":["D:/PDM/IonicApp/myApp/src/todo/useTrains.tsx"],"names":["getLogger","useState","log","useTrains","trains","setItems","id","from","to","nrSeats","changeSeats","upTrain","find","tr","i","length","concat"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,SAAxB;AACA,SAAQC,QAAR,QAAuB,OAAvB;AAGA,MAAMC,GAAG,GAAGF,SAAS,CAAC,WAAD,CAArB;AAgBA,OAAO,MAAMG,SAA4B,GAAG,MAAM;AAC9C,QAAM,CAACC,MAAD,EAASC,QAAT,IAAqBJ,QAAQ,CAAC,CAChC;AAACK,IAAAA,EAAE,EAAE,GAAL;AAAUC,IAAAA,IAAI,EAAC,WAAf;AAA4BC,IAAAA,EAAE,EAAC,MAA/B;AAAuCC,IAAAA,OAAO,EAAE;AAAhD,GADgC,EAEhC;AAACH,IAAAA,EAAE,EAAE,GAAL;AAAUC,IAAAA,IAAI,EAAC,aAAf;AAA8BC,IAAAA,EAAE,EAAC,WAAjC;AAA8CC,IAAAA,OAAO,EAAE;AAAvD,GAFgC,CAAD,CAAnC;;AAKA,QAAMC,WAAW,GAAG,MAAM;AACtB,UAAMJ,EAAE,GAAG,GAAX;AACAJ,IAAAA,GAAG,CAAC,cAAD,CAAH;AACA,QAAIS,OAAO,GAAGP,MAAM,CAACQ,IAAP,CAAYC,EAAE,IAAIA,EAAE,CAACP,EAAH,KAAUA,EAA5B,CAAd;;AACA,QAAGK,OAAH,EAAW;AACPA,MAAAA,OAAO,CAACF,OAAR,GADO,CAEP;;AACA,WAAI,IAAIK,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGV,MAAM,CAACW,MAA1B,EAAkCD,CAAC,EAAnC,EAAsC;AAClC,YAAGV,MAAM,CAACU,CAAD,CAAN,CAAUR,EAAV,KAAiBK,OAAO,CAACL,EAA5B,EACIF,MAAM,CAACU,CAAD,CAAN,CAAUL,OAAV,GAAoBE,OAAO,CAACF,OAA5B;AACP;;AACDJ,MAAAA,QAAQ,CAACD,MAAM,CAACY,MAAP,EAAD,CAAR;AACAd,MAAAA,GAAG,CAAC,eAAeE,MAAM,CAACW,MAAvB,CAAH;AACH;AACJ,GAdD;;AAeAb,EAAAA,GAAG,CAAC,YAAD,CAAH;AACA,SAAM;AACFE,IAAAA,MADE;AAEFM,IAAAA;AAFE,GAAN;AAIH,CA1BM","sourcesContent":["import {getLogger} from \"../core\";\r\nimport {useState} from \"react\";\r\n\r\n\r\nconst log = getLogger('useTrains');\r\n\r\nexport interface TrainProps{\r\n    id?: string;\r\n    from: string;\r\n    to: string;\r\n    timeLeave?: Date;\r\n    timeArrive?: Date;\r\n    nrSeats: number;\r\n}\r\n\r\nexport interface TrainsProps{\r\n    trains: TrainProps[];\r\n    changeSeats: () => void;\r\n}\r\n\r\nexport const useTrains: () => TrainsProps = () => {\r\n    const [trains, setItems] = useState([\r\n        {id: \"1\", from:\"Bucuresti\", to:\"Iasi\", nrSeats: 4},\r\n        {id: \"2\", from:\"Cluj-Napoca\", to:\"Timisoara\", nrSeats: 5}\r\n    ]);\r\n\r\n    const changeSeats = () => {\r\n        const id = \"2\";\r\n        log(\"Seat changed\");\r\n        let upTrain = trains.find(tr => tr.id === id );\r\n        if(upTrain){\r\n            upTrain.nrSeats++;\r\n            //let trainsAux = trains;\r\n            for(let i = 0; i < trains.length; i++){\r\n                if(trains[i].id === upTrain.id)\r\n                    trains[i].nrSeats = upTrain.nrSeats;\r\n            }\r\n            setItems(trains.concat());\r\n            log(\"Nr trains:\" + trains.length);\r\n        }\r\n    }\r\n    log(\"Returns...\")\r\n    return{\r\n        trains,\r\n        changeSeats,\r\n    };\r\n};"]},"metadata":{},"sourceType":"module"}