{"ast":null,"code":"var _jsxFileName = \"D:\\\\PDM\\\\IonicApp\\\\myApp\\\\src\\\\auth\\\\AuthProvider.tsx\";\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { getLogger } from '../core';\nimport { login as loginApi } from './authApi';\nconst log = getLogger('AuthProvider');\nconst initialState = {\n  isAuthenticated: false,\n  isAuthenticating: false,\n  authenticationError: null,\n  pendingAuthentication: false,\n  token: ''\n};\nexport const AuthContext = React.createContext(initialState);\nexport const AuthProvider = ({\n  children\n}) => {\n  const [state, setState] = useState(initialState);\n  const {\n    isAuthenticated,\n    isAuthenticating,\n    authenticationError,\n    pendingAuthentication,\n    token\n  } = state;\n  const login = useCallback(loginCallback, []);\n  useEffect(authenticationEffect, [pendingAuthentication]);\n  const value = {\n    isAuthenticated,\n    login,\n    isAuthenticating,\n    authenticationError,\n    token\n  };\n  log('render');\n  return /*#__PURE__*/React.createElement(AuthContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }\n  }, children);\n\n  function loginCallback(username, password) {\n    log('login');\n    setState({ ...state,\n      pendingAuthentication: true,\n      username,\n      password\n    });\n  }\n\n  function authenticationEffect() {\n    let canceled = false;\n    authenticate();\n    return () => {\n      canceled = true;\n    };\n\n    async function authenticate() {\n      if (!pendingAuthentication) {\n        log('authenticate, !pendingAuthentication, return');\n        return;\n      }\n\n      try {\n        log('authenticate...');\n        setState({ ...state,\n          isAuthenticating: true\n        });\n        const {\n          username,\n          password\n        } = state;\n        const {\n          token\n        } = await loginApi(username, password);\n\n        if (canceled) {\n          return;\n        }\n\n        log('authenticate succeeded');\n        setState({ ...state,\n          token,\n          pendingAuthentication: false,\n          isAuthenticated: true,\n          isAuthenticating: false\n        });\n      } catch (error) {\n        if (canceled) {\n          return;\n        }\n\n        log('authenticate failed');\n        setState({ ...state,\n          authenticationError: error,\n          pendingAuthentication: false,\n          isAuthenticating: false\n        });\n      }\n    }\n  }\n};","map":{"version":3,"sources":["D:/PDM/IonicApp/myApp/src/auth/AuthProvider.tsx"],"names":["React","useCallback","useEffect","useState","getLogger","login","loginApi","log","initialState","isAuthenticated","isAuthenticating","authenticationError","pendingAuthentication","token","AuthContext","createContext","AuthProvider","children","state","setState","loginCallback","authenticationEffect","value","username","password","canceled","authenticate","error"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getLogger } from '../core';\r\nimport { login as loginApi } from './authApi';\r\n\r\nconst log = getLogger('AuthProvider');\r\n\r\ntype LoginFn = (username?: string, password?: string) => void;\r\n\r\nexport interface AuthState {\r\n  authenticationError: Error | null;\r\n  isAuthenticated: boolean;\r\n  isAuthenticating: boolean;\r\n  login?: LoginFn;\r\n  pendingAuthentication?: boolean;\r\n  username?: string;\r\n  password?: string;\r\n  token: string;\r\n}\r\n\r\nconst initialState: AuthState = {\r\n  isAuthenticated: false,\r\n  isAuthenticating: false,\r\n  authenticationError: null,\r\n  pendingAuthentication: false,\r\n  token: '',\r\n};\r\n\r\nexport const AuthContext = React.createContext<AuthState>(initialState);\r\n\r\ninterface AuthProviderProps {\r\n  children: PropTypes.ReactNodeLike,\r\n}\r\n\r\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\r\n  const [state, setState] = useState<AuthState>(initialState);\r\n  const { isAuthenticated, isAuthenticating, authenticationError, pendingAuthentication, token } = state;\r\n  const login = useCallback<LoginFn>(loginCallback, []);\r\n  useEffect(authenticationEffect, [pendingAuthentication]);\r\n  const value = { isAuthenticated, login, isAuthenticating, authenticationError, token };\r\n  log('render');\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n\r\n  function loginCallback(username?: string, password?: string): void {\r\n    log('login');\r\n    setState({\r\n      ...state,\r\n      pendingAuthentication: true,\r\n      username,\r\n      password\r\n    });\r\n  }\r\n\r\n  function authenticationEffect() {\r\n    let canceled = false;\r\n    authenticate();\r\n    return () => {\r\n      canceled = true;\r\n    }\r\n\r\n    async function authenticate() {\r\n      if (!pendingAuthentication) {\r\n        log('authenticate, !pendingAuthentication, return');\r\n        return;\r\n      }\r\n      try {\r\n        log('authenticate...');\r\n        setState({\r\n          ...state,\r\n          isAuthenticating: true,\r\n        });\r\n        const { username, password } = state;\r\n        const { token } = await loginApi(username, password);\r\n        if (canceled) {\r\n          return;\r\n        }\r\n        log('authenticate succeeded');\r\n        setState({\r\n          ...state,\r\n          token,\r\n          pendingAuthentication: false,\r\n          isAuthenticated: true,\r\n          isAuthenticating: false,\r\n        });\r\n      } catch (error) {\r\n        if (canceled) {\r\n          return;\r\n        }\r\n        log('authenticate failed');\r\n        setState({\r\n          ...state,\r\n          authenticationError: error,\r\n          pendingAuthentication: false,\r\n          isAuthenticating: false,\r\n        });\r\n      }\r\n    }\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}