{"ast":null,"code":"var _jsxFileName = \"D:\\\\PDM\\\\IonicApp\\\\myApp\\\\src\\\\todo\\\\Home.tsx\";\nimport { IonButton, IonButtons, IonContent, IonHeader, IonInfiniteScroll, IonInfiniteScrollContent, IonList, IonLoading, IonPage, IonTitle, IonToolbar, NavContext, useIonViewDidEnter, IonSearchbar } from \"@ionic/react\";\nimport React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport Train from \"./Train\";\nimport { getLogger } from '../core';\nimport { TrainContext } from \"./TrainProvider\";\nimport { AuthContext } from \"../auth\";\nimport { Plugins } from \"@capacitor/core\";\nimport { useNetwork } from \"../network/useNetwork\";\nimport { useAppState } from \"../network/useAppState\";\nimport { useBackgroundTask } from \"../network/useBackgroundTask\";\nconst log = getLogger('Home');\n\nconst Home = ({\n  history\n}) => {\n  const {\n    appState\n  } = useAppState();\n  const {\n    networkStatus\n  } = useNetwork();\n  const {\n    trains,\n    fetching,\n    fetchingError\n  } = useContext(TrainContext);\n  const {\n    token,\n    logout,\n    isAuthenticated\n  } = useContext(AuthContext);\n  const {\n    navigate\n  } = useContext(NavContext);\n  const [searchText, setSearchText] = useState('');\n  const offset = 15;\n  const [page, setPage] = useState(1);\n  const [trainSlice, setTrainSlice] = useState([]);\n  useEffect(() => {\n    const {\n      Storage\n    } = Plugins;\n    Storage.clear();\n  });\n  useEffect(() => {\n    const slice = trains === null || trains === void 0 ? void 0 : trains.slice(0, offset);\n    setTrainSlice(slice); //log(\"FOLOSIM USE EFFECT\");\n\n    return;\n  }, [trains]); //log(\"Dupa use effect\", trainSlice);\n\n  useBackgroundTask(() => new Promise(resolve => {\n    console.log(\"Trying to send data\");\n\n    resolve = async () => {\n      let items = [];\n      const {\n        Storage\n      } = Plugins;\n      const {\n        keys\n      } = await Storage.keys();\n\n      for (let i = 0; i < keys.length; i++) {\n        if (keys[i].startsWith(\"Bought:\")) {\n          const res = await Storage.get({\n            key: keys[i]\n          });\n\n          if (res.value) {\n            items.push(buildTrainProps(JSON.parse(res.value)));\n          }\n        }\n      }\n    };\n\n    resolve();\n  }));\n  const [disableInfiniteScroll, setDisableInfiniteScroll] = useState(false);\n  useIonViewDidEnter(async () => {// await setInit();\n    // await fetchItems(page);\n    // @ts-ignore\n  });\n\n  async function searchNext($event) {\n    //const {trains, fetching, fetchingError} = useContext(TrainContext);\n    log(\"searching Next\");\n    log(page); // await fetchItems(page);\n\n    if ((trainSlice === null || trainSlice === void 0 ? void 0 : trainSlice.length) !== (trains === null || trains === void 0 ? void 0 : trains.length)) {\n      const slice = trains === null || trains === void 0 ? void 0 : trains.slice(page * offset, (page + 1) * offset); // @ts-ignore\n\n      setTrainSlice(trainSlice === null || trainSlice === void 0 ? void 0 : trainSlice.concat(slice));\n      setPage(prevState => prevState + 1);\n    }\n\n    $event.target.complete();\n  }\n\n  const redirect = useCallback(() => navigate('/login', 'back'), [navigate]);\n\n  const handleLogout = () => {\n    log('handleLogout');\n    logout === null || logout === void 0 ? void 0 : logout();\n    log('is not auth');\n    const {\n      Storage\n    } = Plugins;\n    Storage.clear();\n    redirect();\n  };\n\n  const handleSearch = () => {\n    if (searchText === '') {\n      setTrainSlice([]);\n    } else {\n      const slice = trains === null || trains === void 0 ? void 0 : trains.filter(train => train.from.startsWith(searchText) || train.to.startsWith(searchText));\n      console.log(slice);\n      if (slice !== undefined || slice !== []) setTrainSlice(slice);else setTrainSlice([]);\n    }\n  };\n\n  log(\"Trains render...\");\n  return /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, \"Student CFR\"), /*#__PURE__*/React.createElement(IonButtons, {\n    slot: \"end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    onClick: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 25\n    }\n  }, \"Logout\")))), /*#__PURE__*/React.createElement(IonContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonSearchbar, {\n    value: searchText,\n    onIonChange: e => {\n      setSearchText(e.detail.value);\n      handleSearch();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, \"App state is \", JSON.stringify(appState)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, \"Network status is \", JSON.stringify(networkStatus)), /*#__PURE__*/React.createElement(IonLoading, {\n    isOpen: fetching,\n    message: \"Fetching trains\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 17\n    }\n  }), trainSlice && /*#__PURE__*/React.createElement(IonList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }, trainSlice.map(({\n    _id,\n    from,\n    to,\n    nrSeats\n  }) => /*#__PURE__*/React.createElement(Train, {\n    key: _id,\n    _id: _id,\n    from: from,\n    to: to,\n    nrSeats: nrSeats,\n    onBuy: id => history.push(`/train/${id}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 29\n    }\n  }))), fetchingError && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }, fetchingError.message || 'Failed to fetch items'), /*#__PURE__*/React.createElement(IonInfiniteScroll, {\n    threshold: \"0\",\n    disabled: disableInfiniteScroll,\n    onIonInfinite: e => searchNext(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonInfiniteScrollContent, {\n    loadingText: \"Loading...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  }))));\n\n  async function getLocalData() {\n    let items = [];\n    const {\n      Storage\n    } = Plugins;\n    const {\n      keys\n    } = await Storage.keys();\n\n    for (let i = 0; i < keys.length; i++) {\n      const res = await Storage.get({\n        key: keys[i]\n      });\n\n      if (res.value) {\n        items.push(buildTrainProps(JSON.parse(res.value)));\n      }\n    }\n\n    return items;\n  }\n\n  function buildTrainProps(train) {\n    return train;\n  }\n\n  function trainStorage(token) {\n    (async () => {\n      const {\n        Storage\n      } = Plugins; // Saving ({ key: string, value: string }) => Promise<void>\n\n      await Storage.set({\n        key: 'user',\n        value: JSON.stringify({\n          token: token\n        })\n      }); // Loading value by key ({ key: string }) => Promise<{ value: string | null }>\n\n      const res = await Storage.get({\n        key: 'user'\n      });\n\n      if (res.value) {\n        console.log('User found', JSON.parse(res.value));\n      } else {\n        console.log('User not found');\n      } // Loading keys () => Promise<{ keys: string[] }>\n\n\n      const {\n        keys\n      } = await Storage.keys();\n      console.log('Keys found', keys); // Removing value by key, ({ key: string }) => Promise<void>\n\n      await Storage.remove({\n        key: 'user'\n      });\n      console.log('Keys found after remove', await Storage.keys()); // Clear storage () => Promise<void>\n      // await Storage.clear();\n    })();\n  }\n};\n\nexport default Home;","map":{"version":3,"sources":["D:/PDM/IonicApp/myApp/src/todo/Home.tsx"],"names":["IonButton","IonButtons","IonContent","IonHeader","IonInfiniteScroll","IonInfiniteScrollContent","IonList","IonLoading","IonPage","IonTitle","IonToolbar","NavContext","useIonViewDidEnter","IonSearchbar","React","useCallback","useContext","useEffect","useState","Train","getLogger","TrainContext","AuthContext","Plugins","useNetwork","useAppState","useBackgroundTask","log","Home","history","appState","networkStatus","trains","fetching","fetchingError","token","logout","isAuthenticated","navigate","searchText","setSearchText","offset","page","setPage","trainSlice","setTrainSlice","Storage","clear","slice","Promise","resolve","console","items","keys","i","length","startsWith","res","get","key","value","push","buildTrainProps","JSON","parse","disableInfiniteScroll","setDisableInfiniteScroll","searchNext","$event","concat","prevState","target","complete","redirect","handleLogout","handleSearch","filter","train","from","to","undefined","e","detail","stringify","map","_id","nrSeats","id","message","getLocalData","trainStorage","set","remove"],"mappings":"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","sourcesContent":["import {\r\n    IonButton,\r\n    IonButtons,\r\n    IonContent,\r\n    IonFab,\r\n    IonFabButton,\r\n    IonHeader,\r\n    IonIcon, IonInfiniteScroll, IonInfiniteScrollContent, IonList,\r\n    IonLoading,\r\n    IonPage,\r\n    IonTitle,\r\n    IonToolbar, NavContext, useIonViewDidEnter, useIonViewWillEnter,\r\n    IonSearchbar\r\n} from \"@ionic/react\";\r\nimport React, {useCallback, useContext, useEffect, useState} from \"react\";\r\nimport Train from \"./Train\";\r\nimport {baseUrl, getLogger} from '../core';\r\nimport {add, train} from \"ionicons/icons\";\r\nimport {TrainContext, TrainProvider} from \"./TrainProvider\";\r\nimport {RouteComponentProps} from \"react-router\";\r\nimport {getTrains, getTrainsPage} from \"./TrainsAPI\";\r\nimport {AuthContext} from \"../auth\";\r\nimport {TrainProps} from \"./TrainProps\";\r\nimport {Plugins} from \"@capacitor/core\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {useNetwork} from \"../network/useNetwork\";\r\nimport {useAppState} from \"../network/useAppState\";\r\nimport {useBackgroundTask} from \"../network/useBackgroundTask\";\r\nconst log = getLogger('Home');\r\n\r\nconst Home: React.FC<RouteComponentProps> = ({history}) =>{\r\n\r\n    const { appState } = useAppState();\r\n    const { networkStatus } = useNetwork();\r\n\r\n    const {trains, fetching, fetchingError, } = useContext(TrainContext);\r\n    const {token, logout, isAuthenticated} = useContext(AuthContext);\r\n    const {navigate} = useContext(NavContext);\r\n    const [searchText, setSearchText] = useState('');\r\n\r\n    const offset = 15\r\n    const [page, setPage] = useState<number>(1);\r\n    const [trainSlice, setTrainSlice] = useState<TrainProps[] | undefined>([]);\r\n\r\n    useEffect(() => {\r\n       const {Storage} = Plugins;\r\n       Storage.clear();\r\n    });\r\n\r\n    useEffect(() => {\r\n        const slice = trains?.slice(0, offset);\r\n        setTrainSlice(slice);\r\n        //log(\"FOLOSIM USE EFFECT\");\r\n        return;\r\n        }, [trains])\r\n    //log(\"Dupa use effect\", trainSlice);\r\n\r\n    useBackgroundTask(() => new Promise(resolve => {\r\n        console.log(\"Trying to send data\");\r\n        resolve = async () => {\r\n            let items = []\r\n            const {Storage} = Plugins;\r\n            const {keys} = await Storage.keys();\r\n            for (let i = 0; i < keys.length; i++) {\r\n                if (keys[i].startsWith(\"Bought:\")) {\r\n                    const res = await Storage.get({key: keys[i]});\r\n                    if (res.value) {\r\n                        items.push(buildTrainProps(JSON.parse(res.value)));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        resolve();\r\n    }));\r\n\r\n\r\n\r\n    const [disableInfiniteScroll, setDisableInfiniteScroll] = useState<boolean>(false);\r\n\r\n    useIonViewDidEnter(async () => {\r\n        // await setInit();\r\n        // await fetchItems(page);\r\n        // @ts-ignore\r\n    });\r\n\r\n    async function searchNext($event: CustomEvent<void>) {\r\n        //const {trains, fetching, fetchingError} = useContext(TrainContext);\r\n        log(\"searching Next\");\r\n        log(page);\r\n        // await fetchItems(page);\r\n        if(trainSlice?.length !== trains?.length) {\r\n        const slice = trains?.slice(page*offset, (page+1) * offset);\r\n        // @ts-ignore\r\n        setTrainSlice(trainSlice?.concat(slice));\r\n            setPage(prevState => prevState + 1);\r\n        }\r\n        ($event.target as HTMLIonInfiniteScrollElement).complete();\r\n    }\r\n    const redirect = useCallback(\r\n        () => navigate('/login', 'back'),\r\n        [navigate]\r\n    );\r\n\r\n    const handleLogout = () => {\r\n        log('handleLogout');\r\n        logout?.();\r\n        log('is not auth');\r\n        const {Storage} = Plugins;\r\n        Storage.clear();\r\n\r\n        redirect();\r\n\r\n    }\r\n\r\n    const handleSearch = () => {\r\n        if(searchText === ''){\r\n            setTrainSlice([]);\r\n        }else {\r\n            const slice = trains?.filter(train => train.from.startsWith(searchText) || train.to.startsWith(searchText));\r\n            console.log(slice);\r\n            if(slice !== undefined || slice !== [])\r\n                setTrainSlice(slice);\r\n            else setTrainSlice([]);\r\n        }\r\n\r\n    }\r\n\r\n    log(\"Trains render...\");\r\n    return(\r\n        <IonPage>\r\n            <IonHeader>\r\n                <IonToolbar>\r\n                    <IonTitle>Student CFR</IonTitle>\r\n                    <IonButtons slot=\"end\">\r\n                        <IonButton onClick={handleLogout}>\r\n                            Logout\r\n                        </IonButton>\r\n                    </IonButtons>\r\n                </IonToolbar>\r\n            </IonHeader>\r\n            <IonContent>\r\n                <IonSearchbar value={searchText} onIonChange={e => {setSearchText(e.detail.value!); handleSearch()}}></IonSearchbar>\r\n                <div>App state is {JSON.stringify(appState)}</div>\r\n                <div>Network status is {JSON.stringify(networkStatus)}</div>\r\n                <IonLoading isOpen = {fetching} message = \"Fetching trains\"/>\r\n                {trainSlice && (\r\n                    <IonList>\r\n                        {trainSlice.map(({_id, from, to, nrSeats}) =>\r\n                            <Train key={_id} _id={_id} from={from} to={to} nrSeats={nrSeats} onBuy={id => history.push(`/train/${id}`)}/>)}\r\n                    </IonList>\r\n                )}\r\n                {fetchingError && (\r\n                    <div>{fetchingError.message || 'Failed to fetch items'}</div>\r\n                )}\r\n                <IonInfiniteScroll threshold=\"0\" disabled={disableInfiniteScroll}\r\n                                   onIonInfinite={(e: CustomEvent<void>) => searchNext(e)}>\r\n                    <IonInfiniteScrollContent\r\n                        loadingText=\"Loading...\">\r\n                    </IonInfiniteScrollContent>\r\n                </IonInfiniteScroll>\r\n            </IonContent>\r\n        </IonPage>\r\n    );\r\n\r\n\r\n    async function getLocalData() {\r\n        let items = []\r\n        const {Storage} = Plugins;\r\n        const {keys} = await Storage.keys();\r\n        for(let i = 0; i<keys.length; i++){\r\n            const res = await Storage.get({ key: keys[i] });\r\n            if(res.value) {\r\n                items.push(buildTrainProps(JSON.parse(res.value)));\r\n            }\r\n        }\r\n\r\n        return items;\r\n    }\r\n\r\n    function buildTrainProps(train: TrainProps){\r\n        return train;\r\n    }\r\n\r\n\r\n    function trainStorage(token: string) {\r\n        (async () => {\r\n            const { Storage } = Plugins;\r\n\r\n            // Saving ({ key: string, value: string }) => Promise<void>\r\n            await Storage.set({\r\n                key: 'user',\r\n                value: JSON.stringify({\r\n                    token: token\r\n                })\r\n            });\r\n\r\n            // Loading value by key ({ key: string }) => Promise<{ value: string | null }>\r\n            const res = await Storage.get({ key: 'user' });\r\n            if (res.value) {\r\n                console.log('User found', JSON.parse(res.value));\r\n            } else {\r\n                console.log('User not found');\r\n            }\r\n\r\n            // Loading keys () => Promise<{ keys: string[] }>\r\n            const { keys } = await Storage.keys();\r\n            console.log('Keys found', keys);\r\n\r\n            // Removing value by key, ({ key: string }) => Promise<void>\r\n            await Storage.remove({ key: 'user' });\r\n            console.log('Keys found after remove', await Storage.keys());\r\n\r\n            // Clear storage () => Promise<void>\r\n           // await Storage.clear();\r\n        })();\r\n    }\r\n};\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}