{"ast":null,"code":"var _jsxFileName = \"D:\\\\PDM\\\\IonicApp\\\\myApp\\\\src\\\\todo\\\\Home.tsx\";\nimport { IonContent, IonHeader, IonInfiniteScroll, IonInfiniteScrollContent, IonList, IonLoading, IonPage, IonTitle, IonToolbar, useIonViewWillEnter } from \"@ionic/react\";\nimport React, { useContext, useState } from \"react\";\nimport Train from \"./Train\";\nimport { getLogger } from '../core';\nimport { TrainContext } from \"./TrainProvider\";\nimport { getTrainsPage } from \"./TrainsAPI\";\nimport { AuthContext } from \"../auth\";\nconst log = getLogger('Home');\n\nconst Home = ({\n  history\n}) => {\n  let page = 1;\n  let {\n    trains,\n    fetching,\n    fetchingError\n  } = useContext(TrainContext);\n  const {\n    token\n  } = useContext(AuthContext);\n  const [items, setItems] = useState([]);\n  const [disableInfiniteScroll, setDisableInfiniteScroll] = useState(false);\n\n  async function fetchItems() {\n    try {\n      log('fetchItems started');\n      const trainss = await getTrainsPage(token, page);\n\n      if (trains && trainss.length > 0) {\n        setItems([...trainss]);\n        setDisableInfiniteScroll(trainss.length <= 15);\n        page = page + 1;\n      } else {\n        setDisableInfiniteScroll(true);\n      }\n\n      log('fetchItems succeeded');\n    } catch (error) {\n      log('fetchItems failed');\n    }\n  }\n\n  useIonViewWillEnter(async () => {\n    await fetchItems();\n  });\n\n  async function searchNext($event) {\n    //const {trains, fetching, fetchingError} = useContext(TrainContext);\n    log(\"searching Next\");\n    await fetchItems();\n    $event.target.complete();\n  }\n\n  log(\"Trains render...\");\n  return /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonToolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }, \"Student CFR\"))), /*#__PURE__*/React.createElement(IonContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonLoading, {\n    isOpen: fetching,\n    message: \"Fetching trains\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }), items && /*#__PURE__*/React.createElement(IonList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, items.map(({\n    _id,\n    from,\n    to,\n    nrSeats\n  }) => /*#__PURE__*/React.createElement(Train, {\n    key: _id,\n    _id: _id,\n    from: from,\n    to: to,\n    nrSeats: nrSeats,\n    onBuy: id => history.push(`/train/${id}`),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }\n  }))), fetchingError && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  }, fetchingError.message || 'Failed to fetch items'), /*#__PURE__*/React.createElement(IonInfiniteScroll, {\n    threshold: \"100px\",\n    disabled: disableInfiniteScroll,\n    onIonInfinite: e => searchNext(e),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonInfiniteScrollContent, {\n    loadingText: \"Loading...\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default Home;","map":{"version":3,"sources":["D:/PDM/IonicApp/myApp/src/todo/Home.tsx"],"names":["IonContent","IonHeader","IonInfiniteScroll","IonInfiniteScrollContent","IonList","IonLoading","IonPage","IonTitle","IonToolbar","useIonViewWillEnter","React","useContext","useState","Train","getLogger","TrainContext","getTrainsPage","AuthContext","log","Home","history","page","trains","fetching","fetchingError","token","items","setItems","disableInfiniteScroll","setDisableInfiniteScroll","fetchItems","trainss","length","error","searchNext","$event","target","complete","map","_id","from","to","nrSeats","id","push","message","e"],"mappings":"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","sourcesContent":["import {\r\n    IonContent,\r\n    IonFab,\r\n    IonFabButton,\r\n    IonHeader,\r\n    IonIcon, IonInfiniteScroll, IonInfiniteScrollContent, IonList,\r\n    IonLoading,\r\n    IonPage,\r\n    IonTitle,\r\n    IonToolbar, useIonViewWillEnter\r\n} from \"@ionic/react\";\r\nimport React, {useContext, useState} from \"react\";\r\nimport Train from \"./Train\";\r\nimport { getLogger } from '../core';\r\nimport {add, train} from \"ionicons/icons\";\r\nimport {TrainContext, TrainProvider} from \"./TrainProvider\";\r\nimport {RouteComponentProps} from \"react-router\";\r\nimport {getTrains, getTrainsPage} from \"./TrainsAPI\";\r\nimport {AuthContext} from \"../auth\";\r\nimport {TrainProps} from \"./TrainProps\";\r\n\r\nconst log = getLogger('Home');\r\n\r\nconst Home: React.FC<RouteComponentProps> = ({history}) =>{\r\n    let page = 1;\r\n    let {trains, fetching, fetchingError} = useContext(TrainContext);\r\n    const {token} = useContext(AuthContext);\r\n\r\n    const [items, setItems] = useState<TrainProps[]>([]);\r\n    const [disableInfiniteScroll, setDisableInfiniteScroll] = useState<boolean>(false);\r\n\r\n\r\n    async function fetchItems() {\r\n        try {\r\n            log('fetchItems started');\r\n            const trainss = await getTrainsPage(token, page);\r\n            if(trains && trainss.length > 0) {\r\n                setItems([...trainss]);\r\n                setDisableInfiniteScroll(trainss.length <= 15);\r\n                page = page + 1;\r\n            }else {\r\n                setDisableInfiniteScroll(true);\r\n            }\r\n            log('fetchItems succeeded');\r\n\r\n        } catch (error) {\r\n            log('fetchItems failed');\r\n        }\r\n    }\r\n\r\n    useIonViewWillEnter(async () => {\r\n        await fetchItems();\r\n    });\r\n\r\n    async function searchNext($event: CustomEvent<void>) {\r\n        //const {trains, fetching, fetchingError} = useContext(TrainContext);\r\n        log(\"searching Next\");\r\n        await fetchItems();\r\n        ($event.target as HTMLIonInfiniteScrollElement).complete();\r\n    }\r\n\r\n    log(\"Trains render...\");\r\n    return(\r\n        <IonPage>\r\n            <IonHeader>\r\n                <IonToolbar>\r\n                    <IonTitle>Student CFR</IonTitle>\r\n                </IonToolbar>\r\n            </IonHeader>\r\n            <IonContent>\r\n                <IonLoading isOpen = {fetching} message = \"Fetching trains\"/>\r\n                {items && (\r\n                    <IonList>\r\n                        {items.map(({_id, from, to, nrSeats}) =>\r\n                            <Train key={_id} _id={_id} from={from} to={to} nrSeats={nrSeats} onBuy={id => history.push(`/train/${id}`)}/>)}\r\n                    </IonList>\r\n                )}\r\n                {fetchingError && (\r\n                    <div>{fetchingError.message || 'Failed to fetch items'}</div>\r\n                )}\r\n                <IonInfiniteScroll threshold=\"100px\" disabled={disableInfiniteScroll}\r\n                                   onIonInfinite={(e: CustomEvent<void>) => searchNext(e)}>\r\n                    <IonInfiniteScrollContent\r\n                        loadingText=\"Loading...\">\r\n                    </IonInfiniteScrollContent>\r\n                </IonInfiniteScroll>\r\n            </IonContent>\r\n        </IonPage>\r\n    );\r\n};\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}