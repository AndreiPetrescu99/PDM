{"ast":null,"code":"var _jsxFileName = \"D:\\\\PDM\\\\IonicApp\\\\myApp\\\\src\\\\todo\\\\TrainProvider.tsx\";\nimport React, { useCallback, useContext, useEffect, useReducer } from 'react';\nimport { getLogger } from '../core';\nimport { getTrains, newWebSocket, updateTrain } from './TrainsAPI';\nimport { AuthContext } from \"../auth\";\nimport { Plugins } from \"@capacitor/core\";\nconst log = getLogger('ItemProvider');\nconst initialState = {\n  fetching: false,\n  buying: false\n};\nconst FETCH_ITEMS_STARTED = 'FETCH_ITEMS_STARTED';\nconst FETCH_ITEMS_SUCCEEDED = 'FETCH_ITEMS_SUCCEEDED';\nconst FETCH_ITEMS_FAILED = 'FETCH_ITEMS_FAILED';\nconst SAVE_ITEM_STARTED = 'SAVE_ITEM_STARTED';\nconst SAVE_ITEM_SUCCEEDED = 'SAVE_ITEM_SUCCEEDED';\nconst SAVE_ITEM_FAILED = 'SAVE_ITEM_FAILED';\n\nconst reducer = (state, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case FETCH_ITEMS_STARTED:\n      return { ...state,\n        fetching: true,\n        fetchingError: null\n      };\n\n    case FETCH_ITEMS_SUCCEEDED:\n      log(payload.trains);\n      return { ...state,\n        trains: payload.items,\n        fetching: false\n      };\n\n    case FETCH_ITEMS_FAILED:\n      return { ...state,\n        fetchingError: payload.error,\n        fetching: false\n      };\n\n    case SAVE_ITEM_STARTED:\n      return { ...state,\n        buyingError: null,\n        buying: true\n      };\n\n    case SAVE_ITEM_SUCCEEDED:\n      const trains = [...(state.trains || [])];\n      const item = payload.train;\n      const index = trains.findIndex(it => it._id === item._id);\n      log(index);\n\n      if (index === -1) {\n        trains.splice(0, 0, item);\n      } else {\n        trains[index] = item;\n      }\n\n      return { ...state,\n        trains,\n        buying: false\n      };\n\n    case SAVE_ITEM_FAILED:\n      return { ...state,\n        buyingError: payload.error,\n        buying: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const TrainContext = React.createContext(initialState);\nexport const TrainProvider = ({\n  children\n}) => {\n  const {\n    token\n  } = useContext(AuthContext);\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const {\n    trains,\n    fetching,\n    fetchingError,\n    buying,\n    buyingError\n  } = state;\n  useEffect(getItemsEffect, [token]);\n  useEffect(wsEffect, [token]);\n  const buyTicket = useCallback(saveItemCallback, [token]);\n  const value = {\n    trains,\n    fetching,\n    fetchingError,\n    buying,\n    buyingError,\n    buyTicket\n  };\n  log('returns');\n  return /*#__PURE__*/React.createElement(TrainContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, children);\n\n  function getItemsEffect() {\n    let canceled = false;\n    fetchItems();\n    return () => {\n      canceled = true;\n    };\n\n    async function fetchItems() {\n      try {\n        log('fetchItems started');\n        dispatch({\n          type: FETCH_ITEMS_STARTED\n        });\n        const items = await getTrains(token); //log(items);\n\n        log('fetchItems succeeded');\n\n        if (!canceled) {\n          dispatch({\n            type: FETCH_ITEMS_SUCCEEDED,\n            payload: {\n              items\n            }\n          });\n          await saveLocal(items);\n        }\n      } catch (error) {\n        log('fetchItems failed');\n        dispatch({\n          type: FETCH_ITEMS_FAILED,\n          payload: {\n            error\n          }\n        });\n      }\n    }\n  }\n\n  async function saveItemCallback(item) {\n    try {\n      log('saveItem started');\n      dispatch({\n        type: SAVE_ITEM_STARTED\n      });\n      const savedItem = await (item._id ? updateTrain(token, item) : updateTrain(token, item));\n      log('saveItem succeeded');\n      dispatch({\n        type: SAVE_ITEM_SUCCEEDED,\n        payload: {\n          train: savedItem\n        }\n      });\n    } catch (error) {\n      log('saveItem failed');\n      log('saving for later');\n      await saveBought(item);\n      dispatch({\n        type: SAVE_ITEM_FAILED,\n        payload: {\n          error\n        }\n      });\n      item.nrSeats = item.nrSeats - 1;\n      alert(\"Offline we'll get your ticket later\");\n      dispatch({\n        type: SAVE_ITEM_SUCCEEDED,\n        payload: {\n          train: item\n        }\n      });\n    }\n  }\n\n  async function saveLocal(items) {\n    const {\n      Storage\n    } = Plugins; // Saving ({ key: string, value: string }) => Promise<void>\n\n    await Storage.set({\n      key: 'user',\n      value: JSON.stringify({\n        token: token\n      })\n    });\n\n    for (let i = 0; i < items.length; i++) {\n      const item = items[i];\n      await Storage.set({\n        key: item._id,\n        value: JSON.stringify({\n          train: item\n        })\n      });\n    }\n  }\n\n  async function saveBought(item) {\n    const {\n      Storage\n    } = Plugins; // Saving ({ key: string, value: string }) => Promise<void>\n\n    await Storage.set({\n      key: \"Bought:\" + item._id,\n      value: JSON.stringify({\n        item\n      })\n    });\n  }\n\n  function wsEffect() {\n    let canceled = false;\n    log('wsEffect - connecting');\n    const closeWebSocket = newWebSocket(message => {\n      if (canceled) {\n        return;\n      }\n\n      log(message);\n      log(message.payload);\n      const {\n        event,\n        payload: {\n          train\n        }\n      } = message;\n      log(`ws message, item ${event}`);\n      log(train);\n\n      if (event === 'created' || event === 'updated') {\n        dispatch({\n          type: SAVE_ITEM_SUCCEEDED,\n          payload: {\n            train\n          }\n        });\n      }\n    });\n    return () => {\n      log('wsEffect - disconnecting');\n      canceled = true;\n      closeWebSocket();\n    };\n  }\n};","map":{"version":3,"sources":["D:/PDM/IonicApp/myApp/src/todo/TrainProvider.tsx"],"names":["React","useCallback","useContext","useEffect","useReducer","getLogger","getTrains","newWebSocket","updateTrain","AuthContext","Plugins","log","initialState","fetching","buying","FETCH_ITEMS_STARTED","FETCH_ITEMS_SUCCEEDED","FETCH_ITEMS_FAILED","SAVE_ITEM_STARTED","SAVE_ITEM_SUCCEEDED","SAVE_ITEM_FAILED","reducer","state","type","payload","fetchingError","trains","items","error","buyingError","item","train","index","findIndex","it","_id","splice","TrainContext","createContext","TrainProvider","children","token","dispatch","getItemsEffect","wsEffect","buyTicket","saveItemCallback","value","canceled","fetchItems","saveLocal","savedItem","saveBought","nrSeats","alert","Storage","set","key","JSON","stringify","i","length","closeWebSocket","message","event"],"mappings":"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","sourcesContent":["import React, {useCallback, useContext, useEffect, useReducer, useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getLogger } from '../core';\r\nimport { TrainProps } from './TrainProps';\r\nimport {createItem, getTrains, newWebSocket, updateTrain} from './TrainsAPI';\r\nimport {AuthContext} from \"../auth\";\r\nimport {Plugins} from \"@capacitor/core\";\r\n\r\nconst log = getLogger('ItemProvider');\r\n\r\ntype BuyTicketFn = (item: TrainProps) => Promise<any>;\r\n\r\n\r\nexport interface TrainState {\r\n    trains?: TrainProps[],\r\n    fetching: boolean,\r\n    fetchingError?: Error | null,\r\n    buying: boolean,\r\n    buyingError?: Error | null,\r\n    buyTicket?: BuyTicketFn,\r\n}\r\n\r\ninterface ActionProps {\r\n    type: string,\r\n    payload?: any,\r\n}\r\n\r\nconst initialState: TrainState = {\r\n    fetching: false,\r\n    buying: false,\r\n};\r\n\r\nconst FETCH_ITEMS_STARTED = 'FETCH_ITEMS_STARTED';\r\nconst FETCH_ITEMS_SUCCEEDED = 'FETCH_ITEMS_SUCCEEDED';\r\nconst FETCH_ITEMS_FAILED = 'FETCH_ITEMS_FAILED';\r\nconst SAVE_ITEM_STARTED = 'SAVE_ITEM_STARTED';\r\nconst SAVE_ITEM_SUCCEEDED = 'SAVE_ITEM_SUCCEEDED';\r\nconst SAVE_ITEM_FAILED = 'SAVE_ITEM_FAILED';\r\n\r\nconst reducer: (state: TrainState, action: ActionProps) => TrainState =\r\n    (state, { type, payload }) => {\r\n        switch(type) {\r\n            case FETCH_ITEMS_STARTED:\r\n                return { ...state, fetching: true, fetchingError: null };\r\n            case FETCH_ITEMS_SUCCEEDED:\r\n                log(payload.trains);\r\n                return { ...state, trains: payload.items, fetching: false };\r\n            case FETCH_ITEMS_FAILED:\r\n                return { ...state, fetchingError: payload.error, fetching: false };\r\n            case SAVE_ITEM_STARTED:\r\n                return { ...state, buyingError: null, buying: true };\r\n            case SAVE_ITEM_SUCCEEDED:\r\n                const trains = [...(state.trains || [])];\r\n                const item = payload.train;\r\n                const index = trains.findIndex(it => it._id === item._id);\r\n                log(index);\r\n                if (index === -1) {\r\n                   trains.splice(0, 0, item);\r\n                } else {\r\n                    trains[index] = item;\r\n                }\r\n                return { ...state,  trains, buying: false };\r\n            case SAVE_ITEM_FAILED:\r\n                return { ...state, buyingError: payload.error, buying: false };\r\n            default:\r\n                return state;\r\n        }\r\n    };\r\n\r\nexport const TrainContext = React.createContext<TrainState>(initialState);\r\n\r\ninterface ItemProviderProps {\r\n    children: PropTypes.ReactNodeLike,\r\n}\r\n\r\nexport const TrainProvider: React.FC<ItemProviderProps> = ({ children }) => {\r\n\r\n    const {token} = useContext(AuthContext);\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n    const { trains, fetching, fetchingError, buying, buyingError } = state;\r\n    useEffect(getItemsEffect, [token]);\r\n    useEffect(wsEffect, [token]);\r\n    const buyTicket = useCallback<BuyTicketFn>(saveItemCallback, [token]);\r\n    const value = { trains, fetching, fetchingError, buying, buyingError, buyTicket };\r\n    log('returns');\r\n    return (\r\n        <TrainContext.Provider value={value}>\r\n            {children}\r\n        </TrainContext.Provider>\r\n    );\r\n\r\n    function getItemsEffect() {\r\n        let canceled = false;\r\n        fetchItems();\r\n        return () => {\r\n            canceled = true;\r\n        }\r\n\r\n        async function fetchItems() {\r\n            try {\r\n                log('fetchItems started');\r\n                dispatch({ type: FETCH_ITEMS_STARTED });\r\n                const items = await getTrains(token);\r\n                //log(items);\r\n                log('fetchItems succeeded');\r\n                if (!canceled) {\r\n                    dispatch({ type: FETCH_ITEMS_SUCCEEDED, payload: { items } });\r\n                    await saveLocal(items);\r\n                }\r\n            } catch (error) {\r\n                log('fetchItems failed');\r\n                dispatch({ type: FETCH_ITEMS_FAILED, payload: { error } });\r\n            }\r\n        }\r\n    }\r\n\r\n    async function saveItemCallback(item: TrainProps) {\r\n        try {\r\n            log('saveItem started');\r\n            dispatch({ type: SAVE_ITEM_STARTED });\r\n            const savedItem = await (item._id ? updateTrain(token, item) : updateTrain(token, item));\r\n            log('saveItem succeeded');\r\n            dispatch({ type: SAVE_ITEM_SUCCEEDED, payload: { train: savedItem } });\r\n        } catch (error) {\r\n            log('saveItem failed');\r\n            log('saving for later');\r\n            await saveBought(item);\r\n            dispatch({ type: SAVE_ITEM_FAILED, payload: { error } });\r\n            item.nrSeats = item.nrSeats - 1;\r\n            alert(\"Offline we'll get your ticket later\");\r\n            dispatch({ type: SAVE_ITEM_SUCCEEDED, payload: { train: item } });\r\n        }\r\n    }\r\n\r\n    async function saveLocal(items: TrainProps[]){\r\n        const { Storage } = Plugins;\r\n\r\n        // Saving ({ key: string, value: string }) => Promise<void>\r\n        await Storage.set({\r\n            key: 'user',\r\n            value: JSON.stringify({\r\n                token: token\r\n            })\r\n        });\r\n\r\n        for (let i=0; i<items.length; i++){\r\n            const item = items[i]\r\n            await Storage.set({\r\n                key: item._id!,\r\n                value: JSON.stringify({\r\n                    train: item\r\n                })\r\n            });\r\n        }\r\n    }\r\n\r\n    async function saveBought(item: TrainProps){\r\n        const { Storage } = Plugins;\r\n\r\n        // Saving ({ key: string, value: string }) => Promise<void>\r\n        await Storage.set({\r\n            key: \"Bought:\"+item._id!,\r\n            value: JSON.stringify({\r\n                item\r\n            })\r\n        });\r\n    }\r\n\r\n    function wsEffect() {\r\n        let canceled = false;\r\n        log('wsEffect - connecting');\r\n        const closeWebSocket = newWebSocket(message => {\r\n            if (canceled) {\r\n                return;\r\n            }\r\n            log(message);\r\n            log(message.payload);\r\n            const { event, payload: {train} } = message;\r\n            log(`ws message, item ${event}`);\r\n            log(train);\r\n            if (event === 'created' || event === 'updated') {\r\n                dispatch({ type: SAVE_ITEM_SUCCEEDED, payload: {train} });\r\n            }\r\n        });\r\n        return () => {\r\n            log('wsEffect - disconnecting');\r\n            canceled = true;\r\n            closeWebSocket();\r\n        }\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}