{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { Plugins } from '@capacitor/core';\nconst {\n  Network\n} = Plugins;\nconst initialState = {\n  connected: false,\n  connectionType: 'unknown'\n};\nexport const useNetwork = () => {\n  const [networkStatus, setNetworkStatus] = useState(initialState);\n  useEffect(() => {\n    const handler = Network.addListener('networkStatusChange', handleNetworkStatusChange);\n    Network.getStatus().then(handleNetworkStatusChange);\n    let canceled = false;\n    return () => {\n      canceled = true;\n      handler.remove();\n    };\n\n    function handleNetworkStatusChange(status) {\n      console.log('useNetwork - status change', status);\n\n      if (!canceled) {\n        setNetworkStatus(status);\n      }\n    }\n  }, []);\n  return {\n    networkStatus\n  };\n};","map":{"version":3,"sources":["D:/PDM/IonicApp/myApp/src/network/useNetwork.tsx"],"names":["useEffect","useState","Plugins","Network","initialState","connected","connectionType","useNetwork","networkStatus","setNetworkStatus","handler","addListener","handleNetworkStatusChange","getStatus","then","canceled","remove","status","console","log"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAAwBC,OAAxB,QAAuC,iBAAvC;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAcD,OAApB;AAEA,MAAME,YAAY,GAAG;AACnBC,EAAAA,SAAS,EAAE,KADQ;AAEnBC,EAAAA,cAAc,EAAE;AAFG,CAArB;AAKA,OAAO,MAAMC,UAAU,GAAG,MAAM;AAC9B,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAACG,YAAD,CAAlD;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMU,OAAO,GAAGP,OAAO,CAACQ,WAAR,CAAoB,qBAApB,EAA2CC,yBAA3C,CAAhB;AACAT,IAAAA,OAAO,CAACU,SAAR,GAAoBC,IAApB,CAAyBF,yBAAzB;AACA,QAAIG,QAAQ,GAAG,KAAf;AACA,WAAO,MAAM;AACXA,MAAAA,QAAQ,GAAG,IAAX;AACAL,MAAAA,OAAO,CAACM,MAAR;AACD,KAHD;;AAKA,aAASJ,yBAAT,CAAmCK,MAAnC,EAA0D;AACxDC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ,EAA0CF,MAA1C;;AACA,UAAI,CAACF,QAAL,EAAe;AACbN,QAAAA,gBAAgB,CAACQ,MAAD,CAAhB;AACD;AACF;AACF,GAfQ,EAeN,EAfM,CAAT;AAgBA,SAAO;AAAET,IAAAA;AAAF,GAAP;AACD,CAnBM","sourcesContent":["import { useEffect, useState } from 'react';\nimport { NetworkStatus, Plugins } from '@capacitor/core';\n\nconst { Network } = Plugins;\n\nconst initialState = {\n  connected: false,\n  connectionType: 'unknown',\n}\n\nexport const useNetwork = () => {\n  const [networkStatus, setNetworkStatus] = useState(initialState)\n  useEffect(() => {\n    const handler = Network.addListener('networkStatusChange', handleNetworkStatusChange);\n    Network.getStatus().then(handleNetworkStatusChange);\n    let canceled = false;\n    return () => {\n      canceled = true;\n      handler.remove();\n    }\n\n    function handleNetworkStatusChange(status: NetworkStatus) {\n      console.log('useNetwork - status change', status);\n      if (!canceled) {\n        setNetworkStatus(status);\n      }\n    }\n  }, [])\n  return { networkStatus };\n};\n"]},"metadata":{},"sourceType":"module"}