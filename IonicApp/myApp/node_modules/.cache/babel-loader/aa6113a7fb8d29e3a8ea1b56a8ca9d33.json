{"ast":null,"code":"var _jsxFileName = \"D:\\\\PDM\\\\IonicApp\\\\myApp\\\\src\\\\todo\\\\TrainProvider.tsx\";\nimport React, { useCallback, useEffect, useReducer } from 'react';\nimport { getLogger } from '../core';\nimport { createItem, getTrains, newWebSocket, updateTrain } from './TrainsAPI';\nconst log = getLogger('ItemProvider');\nconst initialState = {\n  fetching: false,\n  buying: false\n};\nconst FETCH_ITEMS_STARTED = 'FETCH_ITEMS_STARTED';\nconst FETCH_ITEMS_SUCCEEDED = 'FETCH_ITEMS_SUCCEEDED';\nconst FETCH_ITEMS_FAILED = 'FETCH_ITEMS_FAILED';\nconst SAVE_ITEM_STARTED = 'SAVE_ITEM_STARTED';\nconst SAVE_ITEM_SUCCEEDED = 'SAVE_ITEM_SUCCEEDED';\nconst SAVE_ITEM_FAILED = 'SAVE_ITEM_FAILED';\n\nconst reducer = (state, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case FETCH_ITEMS_STARTED:\n      return { ...state,\n        fetching: true,\n        fetchingError: null\n      };\n\n    case FETCH_ITEMS_SUCCEEDED:\n      log(payload.trains);\n      return { ...state,\n        trains: payload.items,\n        fetching: false\n      };\n\n    case FETCH_ITEMS_FAILED:\n      return { ...state,\n        fetchingError: payload.error,\n        fetching: false\n      };\n\n    case SAVE_ITEM_STARTED:\n      return { ...state,\n        buyingError: null,\n        buying: true\n      };\n\n    case SAVE_ITEM_SUCCEEDED:\n      log(payload);\n      const items = [...(state.trains || [])];\n      const item = payload.item;\n      log(item);\n      const index = items === null || items === void 0 ? void 0 : items.findIndex(it => it.id === item.id);\n\n      if (index === -1) {\n        items.splice(0, 0, item);\n      } else {\n        items[index] = item;\n      }\n\n      return { ...state,\n        items,\n        buying: false\n      };\n\n    case SAVE_ITEM_FAILED:\n      return { ...state,\n        buyingError: payload.error,\n        buying: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const TrainContext = React.createContext(initialState);\nexport const TrainProvider = ({\n  children\n}) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const {\n    trains,\n    fetching,\n    fetchingError,\n    buying,\n    buyingError\n  } = state;\n  useEffect(getItemsEffect, []);\n  useEffect(wsEffect, []);\n  const buyTicket = useCallback(saveItemCallback, []);\n  const value = {\n    trains,\n    fetching,\n    fetchingError,\n    buying,\n    buyingError,\n    buyTicket\n  };\n  log('returns');\n  return /*#__PURE__*/React.createElement(TrainContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, children);\n\n  function getItemsEffect() {\n    let canceled = false;\n    fetchItems();\n    return () => {\n      canceled = true;\n    };\n\n    async function fetchItems() {\n      try {\n        log('fetchItems started');\n        dispatch({\n          type: FETCH_ITEMS_STARTED\n        });\n        const items = await getTrains(); //log(items);\n\n        log('fetchItems succeeded');\n\n        if (!canceled) {\n          dispatch({\n            type: FETCH_ITEMS_SUCCEEDED,\n            payload: {\n              items\n            }\n          });\n        }\n      } catch (error) {\n        log('fetchItems failed');\n        dispatch({\n          type: FETCH_ITEMS_FAILED,\n          payload: {\n            error\n          }\n        });\n      }\n    }\n  }\n\n  async function saveItemCallback(item) {\n    try {\n      log('saveItem started');\n      dispatch({\n        type: SAVE_ITEM_STARTED\n      });\n      const savedItem = await (item.id ? updateTrain(item) : createItem(item));\n      log('saveItem succeeded');\n      dispatch({\n        type: SAVE_ITEM_SUCCEEDED,\n        payload: {\n          item: savedItem\n        }\n      });\n    } catch (error) {\n      log('saveItem failed');\n      dispatch({\n        type: SAVE_ITEM_FAILED,\n        payload: {\n          error\n        }\n      });\n    }\n  }\n\n  function wsEffect() {\n    let canceled = false;\n    log('wsEffect - connecting');\n    const closeWebSocket = newWebSocket(message => {\n      if (canceled) {\n        return;\n      }\n\n      log(message);\n      const {\n        event,\n        payload: train\n      } = message;\n      log(`ws message, item ${event}`);\n\n      if (event === 'created' || event === 'updated') {\n        dispatch({\n          type: SAVE_ITEM_SUCCEEDED,\n          payload: {\n            train\n          }\n        });\n      }\n    });\n    return () => {\n      log('wsEffect - disconnecting');\n      canceled = true;\n      closeWebSocket();\n    };\n  }\n};","map":{"version":3,"sources":["D:/PDM/IonicApp/myApp/src/todo/TrainProvider.tsx"],"names":["React","useCallback","useEffect","useReducer","getLogger","createItem","getTrains","newWebSocket","updateTrain","log","initialState","fetching","buying","FETCH_ITEMS_STARTED","FETCH_ITEMS_SUCCEEDED","FETCH_ITEMS_FAILED","SAVE_ITEM_STARTED","SAVE_ITEM_SUCCEEDED","SAVE_ITEM_FAILED","reducer","state","type","payload","fetchingError","trains","items","error","buyingError","item","index","findIndex","it","id","splice","TrainContext","createContext","TrainProvider","children","dispatch","getItemsEffect","wsEffect","buyTicket","saveItemCallback","value","canceled","fetchItems","savedItem","closeWebSocket","message","event","train"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useReducer } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { getLogger } from '../core';\r\nimport { TrainProps } from './TrainProps';\r\nimport {createItem, getTrains, newWebSocket, updateTrain} from './TrainsAPI';\r\n\r\nconst log = getLogger('ItemProvider');\r\n\r\ntype BuyTicketFn = (item: TrainProps) => Promise<any>;\r\n\r\n\r\nexport interface TrainState {\r\n    trains?: TrainProps[],\r\n    fetching: boolean,\r\n    fetchingError?: Error | null,\r\n    buying: boolean,\r\n    buyingError?: Error | null,\r\n    buyTicket?: BuyTicketFn,\r\n}\r\n\r\ninterface ActionProps {\r\n    type: string,\r\n    payload?: any,\r\n}\r\n\r\nconst initialState: TrainState = {\r\n    fetching: false,\r\n    buying: false,\r\n};\r\n\r\nconst FETCH_ITEMS_STARTED = 'FETCH_ITEMS_STARTED';\r\nconst FETCH_ITEMS_SUCCEEDED = 'FETCH_ITEMS_SUCCEEDED';\r\nconst FETCH_ITEMS_FAILED = 'FETCH_ITEMS_FAILED';\r\nconst SAVE_ITEM_STARTED = 'SAVE_ITEM_STARTED';\r\nconst SAVE_ITEM_SUCCEEDED = 'SAVE_ITEM_SUCCEEDED';\r\nconst SAVE_ITEM_FAILED = 'SAVE_ITEM_FAILED';\r\n\r\nconst reducer: (state: TrainState, action: ActionProps) => TrainState =\r\n    (state, { type, payload }) => {\r\n        switch(type) {\r\n            case FETCH_ITEMS_STARTED:\r\n                return { ...state, fetching: true, fetchingError: null };\r\n            case FETCH_ITEMS_SUCCEEDED:\r\n                log(payload.trains);\r\n                return { ...state, trains: payload.items, fetching: false };\r\n            case FETCH_ITEMS_FAILED:\r\n                return { ...state, fetchingError: payload.error, fetching: false };\r\n            case SAVE_ITEM_STARTED:\r\n                return { ...state, buyingError: null, buying: true };\r\n            case SAVE_ITEM_SUCCEEDED:\r\n                log(payload);\r\n                const items = [...(state.trains || [])];\r\n                const item = payload.item;\r\n                log(item);\r\n                const index = items?.findIndex(it => it.id === item.id);\r\n                if (index === -1) {\r\n                    items.splice(0, 0, item);\r\n                } else {\r\n                    items[index] = item;\r\n                }\r\n                return { ...state,  items, buying: false };\r\n            case SAVE_ITEM_FAILED:\r\n                return { ...state, buyingError: payload.error, buying: false };\r\n            default:\r\n                return state;\r\n        }\r\n    };\r\n\r\nexport const TrainContext = React.createContext<TrainState>(initialState);\r\n\r\ninterface ItemProviderProps {\r\n    children: PropTypes.ReactNodeLike,\r\n}\r\n\r\nexport const TrainProvider: React.FC<ItemProviderProps> = ({ children }) => {\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n    const { trains, fetching, fetchingError, buying, buyingError } = state;\r\n    useEffect(getItemsEffect, []);\r\n    useEffect(wsEffect, []);\r\n    const buyTicket = useCallback<BuyTicketFn>(saveItemCallback, []);\r\n    const value = { trains, fetching, fetchingError, buying, buyingError, buyTicket };\r\n    log('returns');\r\n    return (\r\n        <TrainContext.Provider value={value}>\r\n            {children}\r\n        </TrainContext.Provider>\r\n    );\r\n\r\n    function getItemsEffect() {\r\n        let canceled = false;\r\n        fetchItems();\r\n        return () => {\r\n            canceled = true;\r\n        }\r\n\r\n        async function fetchItems() {\r\n            try {\r\n                log('fetchItems started');\r\n                dispatch({ type: FETCH_ITEMS_STARTED });\r\n                const items = await getTrains();\r\n                //log(items);\r\n                log('fetchItems succeeded');\r\n                if (!canceled) {\r\n                    dispatch({ type: FETCH_ITEMS_SUCCEEDED, payload: { items } });\r\n                }\r\n            } catch (error) {\r\n                log('fetchItems failed');\r\n                dispatch({ type: FETCH_ITEMS_FAILED, payload: { error } });\r\n            }\r\n        }\r\n    }\r\n\r\n    async function saveItemCallback(item: TrainProps) {\r\n        try {\r\n            log('saveItem started');\r\n            dispatch({ type: SAVE_ITEM_STARTED });\r\n            const savedItem = await (item.id ? updateTrain(item) : createItem(item));\r\n            log('saveItem succeeded');\r\n            dispatch({ type: SAVE_ITEM_SUCCEEDED, payload: { item: savedItem } });\r\n        } catch (error) {\r\n            log('saveItem failed');\r\n            dispatch({ type: SAVE_ITEM_FAILED, payload: { error } });\r\n        }\r\n    }\r\n\r\n    function wsEffect() {\r\n        let canceled = false;\r\n        log('wsEffect - connecting');\r\n        const closeWebSocket = newWebSocket(message => {\r\n            if (canceled) {\r\n                return;\r\n            }\r\n            log(message);\r\n            const { event, payload: train } = message;\r\n            log(`ws message, item ${event}`);\r\n            if (event === 'created' || event === 'updated') {\r\n                dispatch({ type: SAVE_ITEM_SUCCEEDED, payload: {train} });\r\n            }\r\n        });\r\n        return () => {\r\n            log('wsEffect - disconnecting');\r\n            canceled = true;\r\n            closeWebSocket();\r\n        }\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}